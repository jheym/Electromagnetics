%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96 Copyright 2007 Radical Eye Software
%%Title: mtiiuf08.dvi
%%CreationDate: Mon Oct 20 13:57:33 2008
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: CMBX12 CMR10 CMMI10 CMR7 CMMI7
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o mtiiuf08.ps mtiiuf08.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2008.10.20:1357
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMMI7
%!PS-AdobeFont-1.1: CMMI7 1.100
%%CreationDate: 1996 Jul 23 07:53:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 108 /l put
readonly def
/FontBBox{0 -250 1171 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962EAC6E3EBFB8AD256A3C654EAAF9A50C51BC6FA90B61B60401C235AFAB7B
B078D20B4B8A6D7F0300CF694E6956FF9C29C84FCC5C9E8890AA56B1BC60E868
DA8488AC4435E6B5CE34EA88E904D5C978514D7E476BF8971D419363125D4811
4D886EDDDCDDA8A6B0FDA5CF0603EA9FA5D4393BEBB26E1AB11C2D74FFA6FEE3
FAFBC6F05B801C1C3276B11080F5023902B56593F3F6B1F37997038F36B9E3AB
76C2E97E1F492D27A8E99F3E947A47166D0D0D063E4E6A9B535DC9F1BED129C5
123775D5D68787A58C93009FD5DA55B19511B95168C83429BD2D878207C39770
012318EA7AA39900C97B9D3859E3D0B04750B8390BF1F1BC29DC22BCAD50ECC6
A3C633D0937A59E859E5185AF9F56704708D5F1C50F78F43DFAC43C4E7DC9413
44CEFE43279AFD3C167C942889A352F2FF806C2FF8B3EB4908D50778AA58CFFC
4D1B14597A06A994ED8414BBE8B26E74D49F6CF54176B7297CDA112A69518050
01337CBA5478EB984CDD22020DAED9CA8311C33FBCC84177F5CE870E709FC608
D28B3A7208EFF72988C136142CE79B4E9C7B3FE588E9824ABC6F04D141E589B3
914A73A42801305439862414F893D5B6C327A7EE2730DEDE6A1597B09C258F05
261BC634F64C9F8477CD51634BA648FC70F659C90DC042C0D6B68CD1DF36D615
24F362B85A58D65A8E6DFD583EF9A79A428F2390A0B5398EEB78F4B5A89D9AD2
A517E0361749554ABD6547072398FFDD863E40501C316F28FDDF8B550FF8D663
9843D0BEA42289F85BD844891DB42EC7C51229D33EE7E83B1290404C799B8E8C
889787CDC194F782420BB447DE705EAE7963391B36647E68306FE077996B8BDA
DE4E69A07E8DE6E91EE7A074D3E0AE4A2115843C89BF15E961832EF28F2D2FFC
7FF1B457A55D4E52C928EB638E8723F06D32B5E06E0DAF0CA6677FE6D06BC1FA
29CA5D14FF45DDC4D60B1715DEFCA885667862DA882857D8B62D16704A50B908
2CA34156E5C7AE10A54A4390141A7CFCE3FACF0DE0EA093637201F21E47338BF
48CFEDCCB99EBF2576A2A7FD629CDAD536B4074A7542147F456572F08645AD19
138396B14B9BD957814026D71BA0424124EB1B8F8FF2E7A8E4C3E770F105B446
619DD724084AFA607325221465C24DA08E48D3B50DDDE6F414857D6767F2EF90
05286274E7EFFA2735B178526905BFD719FA9D48D0357EB4E5346422C3423E87
DE693A93CBE35F1FC985F812
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.1: CMR7 1.0
%%CreationDate: 1991 Aug 20 16:39:21
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
readonly def
/FontBBox{-27 -250 1122 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6CC3F1E9AE32F234EB60FE7D
E34995B1ACFF52428EA20C8ED4FD73E3935CEBD40E0EAD70C0887A451E1B1AC8
47AEDE4191CCDB8B61345FD070FD30C4F375D8418DDD454729A251B3F61DAE7C
8882384282FDD6102AE8EEFEDE6447576AFA181F27A48216A9CAD730561469E4
78B286F22328F2AE84EF183DE4119C402771A249AAC1FA5435690A28D1B47486
1060C8000D3FE1BF45133CF847A24B4F8464A63CEA01EC84AA22FD005E74847E
01426B6890951A7DD1F50A5F3285E1F958F11FC7F00EE26FEE7C63998EA1328B
C9841C57C80946D2C2FC81346249A664ECFB08A2CE075036CEA7359FCA1E90C0
F686C3BB27EEFA45D548F7BD074CE60E626A4F83C69FE93A5324133A78362F30
8E8DCC80DD0C49E137CDC9AC08BAE39282E26A7A4D8C159B95F227BDA2A281AF
A9DAEBF31F504380B20812A211CF9FEB112EC29A3FB3BD3E81809FC6293487A7
455EB3B879D2B4BD46942BB1243896264722CB59146C3F65BD59B96A74B12BB2
9A1354AF174932210C6E19FE584B1B14C00E746089CBB17E68845D7B3EA05105
EEE461E3697FCF835CBE6D46C75523478E766832751CF6D96EC338BDAD57D53B
52F5340FAC9FE0456AD13101824234B262AC0CABA43B62EBDA39795BAE6CFE97
563A50AAE1F195888739F2676086A9811E5C9A4A7E0BF34F3E25568930ADF80F
0BDDAC3B634AD4BA6A59720EA4749236CF0F79ABA4716C340F98517F6F06D9AB
7ED8F46FC1868B5F3D3678DF71AA772CF1F7DD222C6BF19D8EF0CFB7A76FC6D1
0AD323C176134907AB375F20CFCD667AB094E2C7CB2179C4283329C9E435E7A4
1E042AD0BAA059B3F862236180B34D3FCED833472577BACD472A4DE3E3F6222F
7A252B780C86447859579C68FE065411FD8ADADF4FC7DE51F8FD675D89D8660B
E7C97553F2D04925B72675324E1F1812AAA3BD881E968F16EDE2BDEC29955667
9E28B8AFCDC4E73FC735123B91F110188E4158D075070E40460602F27C12ADA7
A45B6318E24F206E2CA486BC1A90C9AD86B84CA04B57354721DDC0A60E6C3A73
429B900B12A14AB1A57500F5DA0A649E0E3899029331E48ADCE3457B064F4D4F
D4C9D6AA67E2CC75B822A090EB31C4E78B3FFA9F9F3DB10177C5AB6561041870
015CF27E4FDA0F155F1642F2BD0D4CBE322B29DA184C025DDF95869B5218A24C
90802F8C9FC82FFED0A466A364C162DDF246F203E46D650355B4C10EDE176886
2474B6FB50199C2F24CF819F44949E8DED68D4167E6657E434923FB5500BD442
56A0B82C3B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 26 /rho put
dup 61 /slash put
dup 67 /C put
dup 69 /E put
dup 109 /m put
dup 110 /n put
dup 120 /x put
dup 121 /y put
dup 126 /vector put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
95601766758C197F327101A9C9BF396ED625E27A7791ADE61ACD2F12F8314C54
A325AEB4C62E46D265A6CD97539574ED5DB1B4962D226221EBC0FA89A8A1E233
E33AB27839F997570BDF0647F4E3E9551EF4CCCE4EE3EE291C9CB27C31067C98
9FB082D224D347E1A2691A9F1A89BF9156D13F97771184A86767B61A85560C3D
9AD8ADCB1710A10ED5E2B00CD2E041D8DE847400D9F0449BCBF23E63094204C2
B81E3FD1CED6FF7CEED3DBC2FF7EB5CD36794992B0DC765BD4B1C8002485A419
B3D32A4B5829286F7C83ABA77572BDD0E507D55D54B8F979DA1991F131572109
48B6392E22A90F1A94B8F1A520F069B3547EAE83E8B938677EBF50B36BF5C139
266B95715BBFF71607250E7170A674382721828C4CD81A196ED12A56D2AF294B
3F043813ECCE92B59C4ACB7CA643F664E11E56FF1274887BBCAC107FCA7524FE
179CE6C20B7661BE640EDA8C29C125321BD8D1C43387A97ABBBC5FA8670BF9E1
0CED7016EC2EA11495524D400043C9A9A9935A2A965FF32F8F2F26D56FA036A9
4F1A743FF5482FE6A5EF53ACCFAFBDB305F8C62F1CF500C0295B35A383DF71A4
F08CB4809BB76272C7C22DF09473EE65125BD65614B867FCA5526B0398156AE9
96430DD45A78033F0F90D6FE7002E9FBECE0D2BB603550309E75283C01E21F21
91B3E052B1C912F22ABA50E74C55090F8F477E8812D3D487B816848036C5298B
40DA83D66B60D9F1F76E5C80BFBD2CD2EB0231F54CB0EAFF8225E25A8ACBD215
548B71A9E9B06D9A4AE89E1C8B93D51060516EFCD230F0A36EBE94D7866BAED3
22EAD6CBC3A6B391DA48BD0F80F884AB3AB05012421A93F6D0F7909C3977F9E6
7E4B46C07389881529EBA0A13063B7A7AB7ECC9E240A79A6A9F07AE8BA0CF97A
00A3532C78418C5333E45328BB04FA21ACAFD782F84415DDC1965D4AD5E7F605
722E3C2A50FC319FCC773AA9E4E8B807793D2F3A85E1D33439DFE6859D5225FC
2D42D3C7D26CF7B4D9E21EC689FE0396EBBB84A22DB1ACAEB0501ED85F8041DF
B11E751D9211F3FC6DF80FD03F66BC814703970CD768350B5AAA560CDC98F2C7
5EDC36809A233F7918F43F0FD53E77CADFDFA7C8D6814C7A49C40FA6B2A233C1
B42D25D889CEE28E9D245C314968A99882EA7F260FA458E1623E7C3E9EEC110D
34A6AB896E74640B61F26390EBEFF1C91F11965D90F5A27878F033DCE51721B1
8AAE8CEFCEACAF0C635D6B1CF0BD2C29A0EE2B996A8E2B51CBB7112E4F96700B
739BBF276F16F2D6B1936345D8E43079678B6BFCD4609AF925A8A1DC475E83C2
41B8C1D3DA8BC5FB22B4AC5DE07938346EA9AD0D9361C54911773AC63F1AD469
ED9D2B22C51633B58F56249DB5E51710CE2624AA63E1E71ABE68A86DFFF648BF
9BA3DFDC6E21135D5151F35F3641BF68560B0FE214DF90B60F8C218790797B6D
CF82A6B4823C8DDE1813C4396489BFD470FE646CA04325A1BFC864B45BFE7F07
36BDD2435BBCB025517C3632023536C4DF991A43519A4953613813C72AF7B582
B42A87A79933A690192ADF0325AD5586DF6131D9C31B24795D1E0541EA54E0E8
2A8EAA1B2BB64E7890F24E2B08A3A19A44342FF8DD0A296B9F8C5D2A0B2BB4D0
D39F4F31A19828F37A01D10A51B63DE66A97035EB7FDDABAC826D30CC2C11C17
2169700AEB5E3DF2B4ABC6393F646CBD6F8C30BA0DC5336C44CFF01B2F391756
6E3132A7EE8969B8202C5FBCE0EA0D6C1BDF4089DC7295FD6D5E2286C38AE598
AACF1ECE8B129842393AA50C2964F3677AE0B76A28305494AC92383AAA284261
BA1FDB22B2C2ABC511510E67328C6139244B33AFBAF8A8785979DE9D9E98D345
D4BBD5676EEAC56F1889118433332A7ED20A7DCA592D12FB96989BB75C04A9A8
2631F086B0B395C5F5F4C25F89257B70D543897AF743D8A2D11D2E23D35EB4B7
DEBBEE3B321C7316FD3518FF84E0F5A87BB4CC58D998B7B03B7D50F42113DE4D
08625686F9A12B192DA1DCA31FAD80F52A1D5A8E82FD55C3B8E9FC6CDA146E54
26B7348933C86AED498427E1A63476D96B98EACBCF9FD665C125993A6D43B542
DF681D0B9531E7770193D5D6842794BF788D3BF002446A5EAB53C0CEF53BF1AF
6235AF6957CE48D6DC5077F29EFB4814383735B748418F1AB9E42F762B1C6E54
CF52FABC38CA1592234E44ABDABD4E5D26D20D8DE9C71E06B51D1DF935DCBB11
235657B9A6721FC48FF79E18911305297B29706B5943ECFB1EDAABACEA4B484F
F8B097FE51385973C400BB09B83E74CEBBD57038E7B6F155D7C399DC5CB04A46
7832DF50BCED717C76B4B32D65A13BEF489E1CDDDF5E5B2DE1A33549066129E4
7A6C64E2C4E1ECE82CC6ECF0146ECD9A57409E3947E228934B75C7D1C442804E
24DB9BA36093486F819E60270A211B048FA2E28FB09B6BC625ADDB224DEDBB7E
C23C70ECD4E6636053BAC3C14B165D28DA18C4B9E39B65DE19F141F18B8A6FD4
7286E49FFF94E72104FE94035D7FA50EB2CA76407727ACE6DCA06F4E17007B0F
92C2866D64A3AE6DBBCCD48716B8AE5A9410B26780870D649BD692E8E01DF7C5
4C021CBD88179C8F2620BD1FDCF822D3637332A4B445A5958D021BF2FF46F779
6E6D224DB9B18AE5EF5BF7171682E80C92E12920B1EC05CB711AEA73E108A1E4
950B7E498D4FE19EA3C0DA4436ACEDA5D73D4C7979AFF223510198BDBD0F82E9
A0BAB89AC25DB62C036E8282DCE2BBD8C50132380682E25EDE7748D4C9E867E6
B67013496E88FB9D49BC157AC9C8AD9F39F4B67917D7A78779CBE9CABDDADCD1
53
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 19 /acute put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 57 /nine put
dup 58 /colon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E2A1040FAF2DE1FD6AFD5FD97EAAB614
956897A7BC784E9865B00EE8B49B918E886049F1F4939403EADAB83A4D8C332E
2221AF8F6F4A4954501CB6A6268AC96F7091245F034BD65542DF47BC7BBAD667
1EE6AF9187E298CB7AABA58E3FB5B4C7E86616C1A830A4A937C265CC28A83EED
8F3C971D6DF5A50A615B713F5332E0CF05C754FD76916FECE4DB2807334C34E1
E2418FFF1B4429A564AB857F1E23337C75E729645AEBE7F8967630A40E00F8C1
3054F2BE2768682E50D0B43E3CE3897D9EE7257E77F9894CD4395C21585D16F8
AEFE05217ED4F78C31FD635A00CE5D0DFC7B0A6BF9444B62C836087731D6D205
24A45B3C8D80983A67377EBBEE171DE0B4A21368F9B83AF7CB286D8389785E93
B11277C65D4D789AF99B1D7A3032947A51DFABA0DA3B94DFA8ECE2B7374827AE
168634FA007F8981ADA04F102A86D9482DAB615591731CE5AA2C88B3F79EF0EC
F6BEC4421FFF27E77685BD9FECA67D88EA3D00D0215682E72761DCF7C109A6C3
419710ED727C5D7E7F33E2DE7C36EFBF9DC5D83AB2C543CC844A757BEDCD0233
2D3C5C1634E7898B710BF941FE0A8BFD5F782445DED00F093357BB182F2F555A
E045C2787B482AC105D1C9AB15C010FC5676BC8C48F3EA9A604861BDF0BB7011
FBEA53A6482B30084AC3B8714C2022EF74C0C02B311A2444269D94763CD3AF62
377F1B095821D9B1E85677D2C82023BAAB13AFD279187807EE92BC6AAF76F571
1FE416096474FB8554439CD3C10F853BC04DD99D4FA6EAAF60616F4E5983D415
EEEE370D240B29E25042B9F62460E645D859670EFE673883AC32D82083ED40BF
4B066D204113620111643E3C1A1416CD797032C4BA1E86BC855FB26CF97A4EC3
FC8818E1838F2E5FCEFEB005BC0B2BC3EA39FD1EF07AE060BD71DA72CEB09F7D
4988BEF2B66A17E02D76E116DD6464F4588903EDC5B5A946DFB841E0343ADD55
EE66F0015B15D26FD05EB16A7707CF6EDFDC55B277117C800852958EF434C68E
E55A8A71D20FF288A50F31BE542B324766C33436A35995B50C495F2A0D54F63D
569BD9F76D0D022AB0AA0EDBFEA4F0897D9B660CBB08C5413D64D6510F73A5BD
3BA6BCFBFEBD5D3333E32FD2DC6FCFD5299FF8D45E45F5FF91CEC6094A596380
2236DB40663D7BDBEBA7C6098A60778D226D7549ED6EFCBB8879B2A8DFCFC57F
7C00F33CC5F0772EC4CB5022877D3E67E9E8CF147756658B8141B78E3E5A469B
252D9C3F4951A5AA4D18106DC985DB13509A49FDFC052A73FC88945605DD33D7
8020E9575406D520383465E7A78826F517E0FAF4514868DE5BD02852B11B5EA5
11A25D9CE07526A644743B53CF0EB7140B728B247BF52344C310972F7E00E2AD
81323493AB24B4588A8D883D166829B22395AA36B013ED2312CDB9C7A711622C
9E5EB2DFE112C348D933634DA984758C4515916CB24EF3539474901EF29CE2A8
C5AF9830592A9941DB03BE3D1FEF7AD9A40B0D8A725371BBB8EE946B3E7E3B68
3D6E8CC849424A41A26414E7B8DC2E53DAA2ED6049750404EC0DD416BDE11E1E
F31D875AD9CA95F901CD12FB33F22FEC432A8BE8633AA20765D009DF176D3AD0
964C7E28284D6C290BD0CFD4D70FC35B80E2DE9B695BB0DFEA6C4148EF842B11
32FB4D245B05435787B4B976196183C841A03868279873F0C4337A3A19DF35C1
31D3C7593E464B37D219A7B93EE3E7253BAFF81B373D4CFE36B64BFE73958ECD
8F95FED94E93818A119F456D1A1AFFC54728A18301CDAB016D3D2945BEDA60B1
FCE5168C08F6BB4C5E38FA1DACBBFAC8EABCA63DD888A27C3B9478BE2BEA6A1D
376722001AE76E8F15DD4357255600161BD69AC7D3FB983BC19ADEA44443E6F4
8E5E025A78DD533F84A4EE18E048E72C76C60672B799BB1D6112A70B7FD72C71
B1B331535713FB509049364E14911381CAB05683E8230FD53896C326E411C506
49C040F5CEF0ACBCF6C4F2E0995CB35931A2543AD550EFBAB6B6F12FF7C6AD41
D24B147811FA46CD8FCB6CDE96F7C380910437F6FD1540CF947326C118BE5C26
1AC05F95D6385E1580197CFB395A027764BF61AC08B6424B7EB557971F3FA6A4
D50420E1AEE5AD8874F102AA83F4CE2F4845D94ABFAD6B70CF0549AA1E7A7AD6
78ECF928B7FDE581B0D089EC0EEBD1B0154316533F394CB2EDBEE4C64050084A
0D9C8BEEB3279740C147E989815F8CA03731F45D6184D9030DF4C5E5A3488DE3
32EEF68E33B53CF2DAA4005C3DFE2921C89401C32B644D219A51DC6E95E869A4
344C8B621478621497025212367BE933B0D1EEA2EAC3A599FE1F51C094019FAA
19705EF092A3E69CBBC4C0E3E0745E8FE93AC19EDBA2394658489AE35FF21539
765C45BA72860B03386CDCEA5A305EBEA231BCB5977E0CE32A4CFECA918D5B9D
FAF133BABF7F8E19E9A9CEA6C26EEACA48F8A7BA87CF0CAFEADCF4BAE341D58B
B3D7E2EBBDF62F222BFBE1B069C36FAD56BCA17F20943ADBB3E766C01B9AC620
2B8EB6CAAF42AE8770D1498A25242480B9F5847105EB23BCFC0916D52FFB74C4
A00B0970A7DBC3BA76F37CDAF0416E77C8645096605FCF7225D86F92BB2B9D99
0A492DC5B59266B135C851EA1CF971F312777C1323E6D1EF735126245C6244BA
40AA303B89E7921B13EF76116BCDC3E1EFFC594A9ACC5474A0D87C65FDD58CD9
8B074D6EE07C568FBB413C4BC484342B82D5F8168487EEC4BF6BA28F4B9A3A33
DD44E361EF1106BABFE143F83FA6CCFAA0B80FCA7B3B48FD1B5FAB5237677AD6
AF66667E23B2B34279ED8EBEBF4AF3FD3D13A7856D40B7CB053ED3FDA9E044E5
F80A6BEBF33F88021271561BFF0FC634575FDBA74CEFE7E178DD18E2113E5DD6
F8D048D5772E436B5A20B0A86D6E5BD968A548763F262F446D7F53A816FB0FA1
A8AB0AA726E90048D7F097BA2DD738104A97D474AF0171BFA97D2EFF7844BE94
F119AF9D7045297A93A05B6A29E87BF1E65656E15E6E3E8890078799B04F4C46
ED6578BC3EBF010BCA1DA63A64ED800869647197A63CA57703CD97C7929EBDD0
C6632B980ACDC6C6931144049E81DC477B0AFE3BE95D7393B57980256A79FDAD
FA41B63B9D2B8CD497E49D113C137657231BAB760ABE999F71C3CE8A6AD731C7
31459F2CD5CD23511019E71C1145161C4FADDDE621D5A9F9F361147A6E9918F1
93935987F6AAF42F86A4E2E682F2A39051AD37CB411C8353C34256E870D0999B
457AFFBC1E6721880573D8632B456418BCB6CE92CAC3961DE3621DEEA4AEB3C1
C94E085C310E6F4B7048094F5F44748697F36BF36C650AE8CDA5D3B1F744D4B4
D60AF3AFB295134E3925A43CA72E3912446A9DE2BF9FDC8CC9C27BB87AE90565
AB399AFFECCA2120E59BEFE6B3E06CC9E8D7185675604660426C3FBB6FEA430B
27475C074CA690924C16A139DA0ED519E29F1881FA394F9FFD0965499BEEF507
1EFD4BCF4D4359D59604F68C8D69B3F8BD1A9A4CC63406F9640CE6E1CFD7C902
4C40734837D0CBCFB3E1110214887EA0B0F2CA095FAD43CFEE8A6BE1FEC462BD
5EAB7857E32F2419B5A975BDE0405D22695CE4092B593CE32C721DDD6080B1CB
FB1FFD025AA74D84783FD9C632236CB81CA77F187EF5891F77C477C3AB10DB3A
EB567B3FFC9CCEE1685BF1D4531C59F11DBDD05174316941946A67F6D7A91A43
B8D20EE526E322D4FBFB1F3FDAD47D52C53FDAD8B323EEA5655CD9039CDCCFFD
1E2AF97FFDAA08476CC42E5771839845A673FE3BCA323CAC2C0DA728C9AE0B14
807C7538DBA41AA1E787C7C86F99DA927C1662D0DF5A134EAFE1212121B37E12
DEFCF8CEEF4C16C24D93B7FED0E31552645F8F72E3189E623637A008DC4438F8
04BE0B71575CEA789A7B5B58A125970DAB5265C21ACDF29F4CEAE99982F25D41
9CBDA3AA793301EBF98BF6B7B21DAC398915322CCA52046FF4D0A4D22FA43C67
82B8830CD6C5BF862E9A1D7A6F699089BC9A084960AFBFB2E0B97C5CA4A935E2
038D3A49A3680B5F9DF76D052E582B021AE02A3EED679CE5123B1A0EDC9C630F
FDDB0C79E737E9AB1C94C2FE199F856E15D28E9D511933D7D84FCF39C1243A04
186C3FF6096753B05183B943E0A637D0682F779AB8F5E3FC6DBB178AED09F44A
859A4D9F0AD932FCBA524CA5AF0F520CACA3C8EAC6B4867266981AAA3FAC9FD7
0CD46DE109210A38D779EA3CA3D4BA2FB818472E918C60BCEB0C7D6F5E8D0D6B
640C35E3B2F90951BC486384E03C6E1D17ED21AD7D46D74AD42E356A4ADA02D7
3EF5E512332658824197AA9ECC0E40E2A4D672393AFF962D053C5BE12B7B04B2
552C436A5D47E89DB61DE7DC02D0D02C1036ECD7BBED83B1C7C457BDE1D08D55
65ABDF516A73FBB480F22B0DB11290EFA8E27D5734346F55C16771B2444EF700
4BEC9197C0C249062849BE1D86F36CF781CB60C1B779B54297ED076E7EAECF8D
0BBFC948AAB4DD4CEFDDD1A1E7A1833ACF40E37D7A3C0BBEB0F471366FA8C42C
CA4D558A8D281D5A9F6E003CD2A3FCB132106EA7051885F1C4042F271CC96343
DBE025166DE514D0DA1E518B328243DE6E330E78BD7A69FC1F3B2CFA486A1E7C
09FE5917CF2CBF4712E47FC072288E4B18559A2A0452080616EB0E2CEC8750F4
DB96F0A47614E146DDC54B49983F9CFCB05FAA9F5F2BD734C33ECE2A48775625
2287795FDAE21D04913105DF032CD5DD14C5A8AD23D558E465A003A57B14A0C0
612124335BC7AB109FA06047A4696CCC5A4C591EC9B428944244990DFDCFEA5E
53E27F71108DCAF4487B50E4E8223296A182760D50B4791BA5B3A4A475CF29EE
C0F9D5D295CFFE358E9D7C8EA8A1CD6CE1B6018BECE9BD6E29F21B55A5831B2C
6413A9873E19AD1F7501A7E1EE2758292EA010C54DD59C186F2AE0EB5AA7A59F
1337F45EE60E2E665EB817CA185C1120E7E3091CC5E799DEB0120707A086A77C
B666CCE8AD0733C8398C85704556E29E436E06C3EBF38F3BA4AFA009EA308B72
1FEEF4EB5B1DF7DD7296326B59D58FEA93485B74179CB8A9448E9473C94EAABE
B79974348F947FA7D02EE8C5DCA5DAEF6D9AF02C7D465AE980A19A055EB68370
769BF6909F2932F703D51C886C1D8FD491C857A674244A11456CD52D63F427A4
26733BEBF538EA3D9D60B0F4D46399ED6C69EEA31A8DA365BA089897038B4B2D
B043392FFA1DD2382A56B682233668B637AD8BE65F90F34B6F78D0D405AAD8EC
435D06279605F26F92A9C728C2C1A78DD6BD2695D3B95568A0A299D3AB42D27D
3053F963C4206674B77E14AEC3DFDE59FF5A7A6952D3336444883428135E1625
EEE64E8B69B32971D3F02F32D4872D91E72D7380F938589CCD8473BBE48B1D0F
0AB8202AB336300D96657A8E711D863CAF8038C01CC5F19B326B0AC6DF5B28B6
5A0F4F9437A25288391A1845889651269F0D8CF52C4478AE231E7CDE5A822FF1
3F1CAEC097E3C9E77A21276DE1FB18EDC68FE1648C8D5435642E07BC572A9B5C
7F8ECCD2EE24278FADE58FEE86C081CF80B7D4060FA7C8967B324ECAC6A66974
267137579A9501322FEB43EBAB0BC44BBC85DA68925BE1E82064032A2C9E769C
AF9852B7783EBB92B33E52005FEF124E88D4E8D4772E9807DD4781BF19116F19
E6C1FF53421687A7AE1C13BFBD11ED265DBFA1F2A9953065A632E3E53B3469D6
08D27700471ECADAA3CB93AAF8E2687B090429B273122542F1633C092CADFAB3
088879351D071F8176F561F5C2326A66309C66D540267054116D819C51E61C9C
68039611C26725FF0A246DE0A4D7B25197FD4421A82265D206AD7E698144B3E2
4DE815477023515F0495AAA555E4DBAAF51D1E3880C54106D6364415CD9BB817
1993DF7E7F45B7303E71493A73D24ABDEAF1F1F05C4A367B7AD9C9289FFEEA3A
DE7C97F6E199F3A84D4C18CA665106A0FB4159D0120B632D6B39D4DADC175843
2FA2A9B4B0400A2867159DA1E7849349F80931B3D0B73C0B8FD728D07FF5148C
4D191AF744E729BEDC937C1361FC726C72FED65F3A6DE4005AC0452807DD0F73
C2859EF7349CE0E10A185283A3F67BDA2D51FEC4AE5FE5D2F146BE827B9A3FE9
F7847ECBB5E5FD26DF78B35973E5E00332C6A998265E4E5100EFCB0CFE7BE7C2
60406564987C47FF89CAA539B4BCE1B39BD553CC50267AEDF714BA91B4C8A017
67F3C1886AB940BAE1116FEA759C27E79362D287082131E2B22E8ED1FDBE176B
D229C9A116B350B486C9B7C19EF4858A1E40AC9CCD2E052401B1059566AFC5A6
2097C6681BBAA114B3A72AC70DCC9BB03E7077CAB1AB2F8C080BF02646297B33
53ADA70A91DF64F0BCA0CA18A2D2DBDF617F5B854080D6D53B870A164BAE65C6
B0979B617D2D34382D6680EE949643F540B5D5F983499930CACD19D715502AE7
E72ABFC9C0E5E9055A8999BDC47F32CAF961172F6057007D8670BAA7B2A9DF74
255A79C75F7825507914471204895E4A616A27094B36875EEB3277647FFD7CD8
90AEE4DA82FF96D3005142BEF95578BE1F1E7E798A14F303C7308C620509EDDA
F137A01BA25CC90AB510E022CBA4F120EE54561B1523D618B2DA7FDD607B9CCC
38553CA49D98AC2E536EE85CA4480E555202009ACA3E13C0921E0753C6468498
6E70F9C8A30538D8990532A909DC62EA24803D1EF7FC74B9B3A124E429DA9B4B
BA97339D932B53D3A461A352DB0452BFF3FE2A71C756603E4DD710100918F663
ADCE9AB66BA4831E17638309E822A5424B978B778F404A005EEA2056AF27A789
01A90B69AB00DE38176E17AC896EBE8B4AEB7803CAB7246D4105047A8E2B5DA8
615574F7B55C7FD295081AAACB415A9426A01C37670A9ABF00862998D568FFA5
C7670648F4A2B28EDFAD7415DB3A676F388E4BC821EFBEB94C4552E64968A5B5
98C3B99DA654B674E19B23B4696F0341C887B31B775016BD9548CB170F6E845E
B2E5B8B675D884AF20DB9F3AB2D4CC834366A453A8595784552CFCC72A3F74A1
AFAFB77738CB953386F228CCD3201BEF858F338280DA3CBE72E24925C4BE6433
039A2A9BE46F383E50ECEC2D60E83799C07C41B3BEB5ACB947BF00B15984BF5D
5443BA04A8951E58C8FF0591AEB308A19FAC6D66F52319A6E08562179D62433B
C402A9C0B02F7BC14811C8D7929A2570D905FDA39E9216AD5965593A98699478
D030CDBF2959FD273EFE52160F8A580807C0E2F6771CE6015566F6BEADC4257E
845223F3F4E03A2D39ACCCB4C83C886E51ECAFCB58668DCB77DBC909988B5811
A3E9CBDBD8A9CB3324C1455B20FF3719C2B7872531BCE40F7743FC55485B9C86
66DBBD425362DF9885315A70C9FC2D930E7F1DCA505ACAFF062EE86C777AC165
6BE608C6A1066F260C26B6AF0973A821203CBFD5309B275C8960E31F17B75C63
B86BB7757F979FED843CBB19EBE672A5824218C7D6C407CD21626D998A6704BA
8772984D4BE18C270F20479C7EBCBB15DD37F03E35DA2C871FA46236C52B2DDB
21EB66F043DDD9695D973DF25BE20C36815EC4499CCA891B0A2E485579716FC3
5270AA8A2EEB66618F2243E5F9B4E722D30B4E8BE6117ABD5B167F9074B9083D
02E1D87DE6BCAB5285228EAE30877CA4BB58CB478EA0DE9363E32B1824B4180B
89D0D07026DF6FFF3E1B0902A864658980B7FD11764520C6A44128F307AFDBAA
AABB6BC1E8557FE1D037877FFA5B54C54633CD502ADF5D5ABF958981722281A4
2E1B988EC7182F8D3169C4EB7F1C120E4EAD90B0AD0CFA29BB603B1BD79489B4
401D1321ABC9B3C3BFC367EE80B9F4CA9BC218CE69479F11ADD5B84EB7E1FE94
17DA412E77F13DB63238F856794DB5898213CB825F91FF975129E98F522DEA03
099EA2BD3399DEE6D3B77CB36B5EEC4E614A128F3AE8B600F7885C280E0DCE6A
FC6E1F52591D90493EF3BFD48BC0B0B8465D7EF3D6007E6B8528C25CC9116B23
92752A14BFB4C5905D6595022C0C18CCD3DDDBC50D3334AED124BE5A5950C1CB
7A3489F92B6FBCCFF0BAE08511E875986A784461F2E171B95B33B05DFCE47383
DC4F633D27BBBBDDBB84F1C1E9E05C50AAF9B60784DA0FB28DE3A7BBCEDBE2B9
F5253905749171D7BC71E3C9970B7A10088DE6B6F7F57C76DD675FFB0481688A
0D98A8C09699D9B2776F62CEC9223F07ECE36DD8FB51B5C3519B4D469455B274
1F727815950618BB59A5A1D9AEF98FE6922AEEB787B1557C3417F7BAD3A827E6
76A25C8BED0886005AC83F225C165620E3AA0D6A1902652B7C70792830611E07
8D28662C75F4B93B5C6D814376E66218EF1129C5BA0DC5E60E3BAA9D4B8BFFDB
7C648FC23A92BD5EE3A7FCF34E1D73F48D3685019A71D9DA7C153B69CA6572A7
494860CBE28091807E20214CC5004AA305029752BFC8E80BA4F8467884CC1AA4
9CE306CB495E0C12F058012E5342956A8EE7FD1FD2AC8D842AD49227DF8306D2
DAC04F3AE9F5E5F0612164478D156710BCD614A9582B5C2CE9284F82B7194B5D
17D9601F801F0BA232CBA5AC3B9A36E043F46B5A9EBC97DCC2C6528A22C57EBC
43276CCDBEE694CA32FA4ED75F96B739DE5F0CB2B36F7EEEB4BB51DA36B78958
E0D22C825033D7E12C4DA30EFFF982DF461BD684FD5080C56F7348A36D2311E4
D2415B88F8F8B95B6855E0E6CA630AD1690C8C4842F6FFBD9BFCF13BC9A413BC
E76704C2105434049B7D9E2A9DA93838363602C0793C105F7625B3FF35D39BED
024DF3C5457C67EECACF8394744338EC6692B5A2F9862B85492129AEF9DF758E
4C37DA88D2BA2E760298D6FD8BFAFD808673F2E385694686317B03289A944017
5A45BD338A30D31B634400961DA6AF6F731355EF47B263EF0BE83BB583658ABD
BFE0571AA1AD5E52BDAEE38407034800E243B4B38D16D75D5616E9EACBECD2F2
1EC49C9FE6BC360F2831DADFC778B39778084C76010B7E4F7672E975949E29A6
0E2E40589A4DECD2462CF9145C26A9E75BF45AE8F4B0BD5CDE75C7158375A723
05AF9FA44AB1430AA8A9E91D4898B7EDB14B03CAEAE8E9E6C040D685A9B3F0DE
9CB2EC37D6B7AB0639F9B1F907103CAE8A2106C7B3504FE40F74AD5AB46EAA04
9D93E2D742E431E5CE13C6DB1DE690156ADCF9F85C8AE501C96276C8E664057B
55297D009936DEF81A6B21D2C5FE8A1669A99B5B55C6E903A7D1EEECF2EBF047
A2EEEBDD58F5A651483F6D4A4E4FB1DB89B9643E4B1CBAED04F01746A5FEB015
A9E13DD3FF250F283AC1C2B0C97F9D7D1852C9458B60381AF52F49FD67C8A295
1F1341F78314D0985CAD7A95B3EA94F161BFE1F878FC97088071A9081ACC547B
7A2B5EF8B34B96969668853161E5B7FB6934F59BA7BF995E47200B007BA4BBD8
EDE5729AA9F33B7717BAB6F52A96F0E8247989C2DC03B412BA58918EE8162924
16B528BBBFE7F499D4A33651FC9740F06C6F121F71A1CDABCC5416D950258FDA
0C4FFE2EFA3198408EBE6A8293B5C413916781B587920AE8505DC9B6FB2C6B78
213D53948A877A1AF89110C7A71C49665C6C5953CEFD375628F4858C22D713C0
6CE07B5BC9EC15FB1045E80B95EA345002AEDDD84C2A26F49C29AF157AB7C0B7
AC7617823D3B53B9868701BC29F897DC06810A7F255CB3F77E002ADB47D0568E
4F9B28B06E961BCB4AAA299482ACAFC4EF8C8E53C436A953BDA7C658A3B431EE
A8C97AC0DCD84DAFDAB13AADA94EFA9D53370143D6303E71141442093AE61C5B
124A2B70DA10BFA7AC71B46AD24FF625AF29C12EB337642E772813D22B783043
8A714544B8D17D66B29704A359205A7EF68C46DE7613F9E3E70D60D08A8D3DAC
37853F113C15BCB5416F95D5FC9EF1FF7CF3B2F70267C336532A588CCDB7617B
3BA951A15C4118BBF42F7C2EB80207BE2DEB0C72D7AE4FADDC27E9CA0305B273
46575D7196057D0B291BC68C4D45F33D3E97ABA83C101C90D8EBEE0E376EEF80
E9E69AEC8037E458CE7E8A1827C5E4244D858D66178BCFCF1DF8A878B616EF2C
4F8F4A92914A6ED59788944B9D4F67A8902EB1E55C8C32FD855075298D1C6F40
6A758F1C347CE39409CEBD66CBD514AD209B2357DEC28EF859ED295D7A66A646
C7BCC66868A21E2C599014070308AEBB259E16DE8D6EEF1FE17FD5253E8FE53B
4CDB7E88BDBC9B7B6E140E76D1381688B97E0EF9EEC379BB2479DB657C0D05F6
B264E47F51D0E611309FD8FFC4E7EDE388562A868CF23E69C2F9E22F3F62A0B8
64C04B6CB205F3B8FB1B0A03CE8EB29B2DD2CB4AA8E9720D72093805DBF45F50
29D0BD562A9CE3F885ECC7C33BEB7BCCE4802E836066BC20DD68DD99CC3CCBED
92A15F7C8C2BF91FA78DA962BCCADF32EC041050A6B1FC85CC4980C92B1DD7D6
2833A215DFDB80D4C47A6B1030F94601F46093C7D43F4F0C64E1B6610C5B29A4
1492B494ED03967C71F00FE77FC7BF17A44E29741DF1F59FA01AFBC5EFA185C0
7A3FBDCC9399BDA2D5B896459C4475B20249092012E960CDF00AC5894956976A
86E8ECBCFCB5540E8BF407E6BED17C10968728A7DBB3BD03877AA796628C46C5
6530AA08F21FA898E95A9E64AACD8FA34D10ED95000BB60E34CA7463EEF2ECB9
DD60BC8851711FDFFFA59A59BC6B2DAFE16AD1C8BE9FF49A37DBB4B6F354755A
009CE27794BC089CCC80DAAC3292F46857E92040C286F79C6B43DFFF0AF28FFD
D272DD9DF22DAB3C7BF36E78CCF1AC9E2E78BF24B66903084EC9008F40D871B5
83A4AAB4C5183901943EA5EF9082705FEA2FBD251B6FB5C145E595CD65435BF8
43C406E3BB0FDC371C84C9A2DD84D9A3405BA368A2BCDD6E8675D733D8ADC079
273E4CA54957597EEFB0B0EBEF582E27D8D5EBD6D0C830F41A15F4994BFBCBD2
D01B85DD44688299561072751BEB114888715398A9F324B8716F51943C57A0A9
127BA10DD44E6C33D5D3C2B7E7F7EE74F32B8F4850BF569AB0E7942B07E89811
CCF23F18781D3308481716488165B29067068B13BC0A1BCAEF38FE1382EEC6AD
DB732B7BFBECA6787F7FF945752CF1B932967E0291B7F4AD59EBAA05B0DD9CD5
C841D4D6AD16D082D069E41010FE8733B8A20AF0FF5184601AD2759EBAD6191A
6D6BC94B4974A9DF07733517D1F7D111B5D4ACA26705ED870044A4DB65B30A36
8465717B71D762FF5872321D46746CF6673B7DC375C4164CDEDE471EDA189E9D
A7CC107AFD45E588845D2C48BA5B1D4121749FD9BBA16CE575FBCC5E11924CB8
E168560A102DA9C8FEC3D1ED42D3B89CAF812F75412F34EB022DE0273B309E61
94194C0FDEDBA139C0F44BB851E1D603938E94E01303DDDBC1210859376FB1C7
36246EEFDC1C6FB012002CF3D68FBDB8EF97D41E4927AC183EE37C2AE676013D
6E0C390F52BDE46EE1E4142574F4E7D4FC6909455DF66DDD3ED60CF2D11434D4
7028CBB43B2EC6250720AC8A9AB45F6F4C28980540415F3FEA29B1C039C0440A
10954296E930F91D03FE79A1C43EED59BA92E4CD0DCFF549ACAB37047D4FEA95
5B2C423A1B7520DDF423382E97663E07B65F2D3D22C0E91F9D3762BE460DCBE2
A27730CD3989F697248538D65ED1960C700D5973B459038A63E4014ABD8A78E1
6D4DDAE0676DA59B5CED1F30067525E364C6B297B1028A6592B2F65290C68319
4BDE6DCAA84EE31F904B0E6C69419024D63E718A0BB3C3911D2069CAE11B5CFB
2FCEA83A4683CF0151948D75012ABA4716C9ED7DE788183BCFF53A68E7DE019F
311297B56BF730798D7BA7B404BEDA7B0DC3EA7727F1F8A44E53B6AD81A84CFC
855940DD2F8229E1CC908A09252422EB53452EC59B032781B91AC55A09395F2C
D7F4106FC0DB0F8B22CC76B0158CEEFBA7B3F365A27654D70679285456C23774
44DCB711D0DB9220CCFBD751229022357169E996CB3DA0EC791A1C677F787C3D
8EDD9A4975EA20BFC2EA2799C4E31BA7BA17A689BD75C2406D103F2E11523AEE
D45BCFB57CBEB034AB20B89C08BC5EF96C264ED40C6A6335EC848ECB5E6BFB88
6253EC2C6368EC1C53C6176BC648079C27D0886C5130D44F926E30AAE96FE157
4297C8CEB984B3C618EDE98691A0F422488CDCB3B9C4B15D69E3F059F259E4FA
01816EEB4E0EF324150A72421698D581EAB7168D7F0B51BA21E4F7085084FB3F
F440838D10316F631C70F8FEAA08D82D2FE45BA81B61BCAEFFF7AD10A4FB65FD
761E5F2951884D54E9F6A3CF8DF0C4DD2D860EF7489EAE3E6FFC154ECEFEF772
1CDC849C954C82FCB5CFE5456FAE88E2014DC38065CB30CF45047DCC978B4342
01B40A46F232F3C089FF9DD0A8F6A479B6ADDBCB0AC854B44DE9BE868C89437B
69E00987D1699A306D129807B12AEF6E6C9FB9EC908984E44B42F0D86E39E61E
302BD43B6A389FD0AE7F919146F242C794C369F5C65CE6E94C17B6341F3FE6D5
81895EE4769F4994EB2C4A34F3DC45D978ADE0F72736BCBE08384DC2B945BB43
CE2699F4FBCA3E9E0D64105929B0D999FDE773DB05E78F00EE897698B0EE3E68
A13397D635C13E203922B464C8B58B9B06D7692BD5CDB29CC229B368748A7868
9B08C11EC1900A83E3F0154C502279FBF245F96203332EB6E4048C489A09553D
FFDF063502DC3DA9482E0DC5AD5DFA1F6DC81D9775DD1B4D94532AEBEB2026C1
F6F5F7C5032E77B4A9C9CD2D31637BAB2BDB305D5EC6F6E882C8CE3EAB4584E1
274AB1B9A2A98AD600F54F929A4798A7C218E64AF690143008ECE137C2B7C8FD
803122072C4F6EF1D519B43AD3E8BC0F376E1424557AA2574609A76B694C7BBB
E767ACE9A8612625E683132CB294A742D71DE62004FF6564D24E64C521FC8393
5B210D35F32043F3764833F06A57C7E1BA1166540342C19AD66D0F41F780CDA8
0F02103B413C30F6CAD344FE0009BB36E5BC45BA31D1228CA93F0F3E1140D4C5
4277ACECC82E8EA096890C50D242C0992A4F7A6667C21222A345BC06894B632A
D389ED1D3A79F35EF4D992FBFE5C117108127C5BEE75BCA6EF2178E346521EA9
8127E51A0C65AC14BFAF33BBD94DE8CCF0DECE01635A7E93BB4C6A8416C00C06
42155C7C063EB23440F704E4CB2AC9A0FC4695D460EE3E0A65CFBA0F99224511
13898946B466EFBD40E7DF6E7EE7A442A1AA3E119A8DCEA11E5CB962F0E798DF
49B5960ACBA9E85F7A7E26DBFB15B3CC597948AE76F1055A8783FE6C7016C2C3
6D7391C69F6C4C1E202D0EB6A43330E705255EF3D9833751C1B6806178D1A35E
A73DB96CDB7EC33CC6AFA3DF0F7AD74CA9DFB1C7BD87103B364F7AF4B94325FD
C9EE8C97CC306EA69E505084C162D522FC14F84CAAF1008601BCADB4D27A066A
75DD5765213A9A452E6C568EE80F5B9CF1F99E0F38E6F8C91CA75DC53DB56705
DC09EC1920991309A2DB02F4857725E870E0DFC9CE35CAAA9FD0BAEF9B2B527E
2769F4591917A20D3C27284D49858DB7A3D6B8A31C91212D4E79BBD88591C9FB
BD8A67E6B641B8DF93DC1E9708520387A72989887525FE439B26F02B76A204A9
75F18D8FAA257FD749B95706959A1CDB8984244D2D66DBDC7E8E9205BC70B11C
57029D0A0169DCF81236965A3E93402C3F919143ADA7B8D9CBA1A08D5401F18A
2B7DA83D83C64CAF8FCCF1F79B3040A506A9CA4BC1DAB3C7D247AAB83D728199
7B4A12350815F5AD58926FDBAC6191ECCC07D7CB20E84F8CA2CD3682294A81B2
52609FE11ECFE80948DD168D8CF819E269E803CDF99972FC950EB525D9F88EF7
9ABD869172FC574F762DF95B7D3AA3F83FB1BDD5C93A9985B11CBAD596122B33
91BC7FC2D7EA3E1DEE5F6E9925E3C5F11743D61FE26B4ADD4FBC92FD9539383E
0D5D40AD5E63E0A5DD6725AD651464DDE147A8604F568C6BF81A0E121C6C62A0
C2DEF508297D286BC2ED13459E9561818A54BFBB21AE3FB03B5E40D5416AFF8E
DC69EB6520C2BBEE138DE1C67158F696DB4342784AED3830AEA1D38C9FAB2E7B
A36E69D623A994AF065ED7EA5763C4496DAEEC6E61BE571C09E4A0422D4047FC
7324A171BDA8A5B86E00ADEA231C626B3E56026172E6F0A045CDCE7934EAB2AE
5F291D44E36792FC23E1DFF0F9F77744A57586B42DFEFC8E2C1104619C0D30BA
BBA231AD29EA4417D64C4B21B059839262FFDBBA40022B3269E2CA04F0D4923E
962E104AF317C21CDADB6F0FBF2DC46A4BEF6034ACE51334CCD9CE422D7853C6
5F0891DD18E823DCB142CFC546165B7D398735B422FAD536B8C192EE27CB201E
0E5D3B79CB3E5DFF45CBCC49A1EBECE44F1074A28D39C3AFCD7BC79A9ED953E9
1382782C51CFA957F8E51316B6A34E631FB900A96671E244BC55135A7A56794D
344CB65FF0167BD4ED9948139C9D6D7ABED101C8BA0B690E8BBB69B8EF69BCCA
11711B22E39ACCDDC35E64739437E363D8D2D9386301A910AFB187FD05CFF028
A45B4BFF350B1FE5DC2058DF5B274E6E58D6594301C863CADC06D636363811F7
CEEE24AEA6BB5B66524923EA3E8BB6612C71E9E8A7B88D4718B38187EB14EEAD
9CE49C52C7981A166949EC414DBD55418985885E1A02CED0E2C19E177FBD429D
CA28D7A28F11F2F223EE08F0A9DBC4A05C5B34B892FB462A7CA916194B01F4F5
D7BD9E338FDE373B2E3DF587E0F18213A7BB980216D0CBFD2E106CA32F57096B
ACBD7F767286BED080C4A8370FBFE5EA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 54 /six put
dup 56 /eight put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE2868F3A4
2352E5885B6D22FDA67371E767DC788521A4AB01BB4CC5518080E63793343E56
E6C98B19C52986114C8E155074952E991D91F60238BB029A20F816FE3E711015
0972940848E8F8C6B96F8EC91BC7E821F65D9D0EA9ED5339BD987AB84C6EDC01
7FEE5B8417D59BDF695DA50225119FD9030F9E306C400DCEFCA2717676AEB1EA
52B608382110AB758705D8FD69438BDAD2E40E6A4AB55CB9A1F9573356B8D467
89BB186B25E1A11CFEB9ACA20D6E45F87B8EF1EF3AC510D5B89A311EE5EE5FA3
1CDB9A1B1D0F63EDFD9518D4EFFBD3BCAEBA37B9B4906AD9FBDBCB5188799D2E
C6CB45DF16864D1D362CFAAC8EE1B4F50E76CF49FC8F48F29B7F3C6248E9473D
26CA59A2B96C07B3CEFF4E81F086ED53427F4A32E35AECE53639B285A7D8902C
5DF58BD6F103D53C9BE3DFAB533047677C72313A1714FED3769FA0883B72758C
C24854DF5BD5B927639C05BDEAC7C4A0AF7E4840DD7380036C7946A396DCCD66
F9AF6CF82C15E60A7AD9069C40721F480782C1FFA831CC2D80FF299BCA23BAAF
7F69B1671F7397107752A734BC7D0B306243442E6EF834B62AA8B1C9B69B77C3
2A2828C9D1F61D726AEB87A20DE937576E40BCFE8C99325D41AA06CFDF3136E0
37FDC1C625BED939E2E09BEFD8E5BB0AC17E1E5097A63D7E1D927D3252D36E2A
15F8F6E37C17616C8F44713C9C7870A38C7A46DBFFCB6720FF3E9EF08479C511
38C939FA690605C2D5714AE53F3E4003D33797F5567D2C4AA0D5A140439615D2
6D5F941C1D7DB91FAD1D16596037AA4F7119802970546EB66D836801A9A091BE
66AA87E933120ED918C356740F2D0A78CF861D2AED1717D6BF8D0C58C9D5A379
4F7FB95D88427F3176ADE959B9888546708FA20C31C8CB6EA4F0FB5C5E895FEB
267F9FF9BC753579B6F35DAFF028B86ED67374CA1AEC8AE4FE53A2458DEE2AC6
EEF734CB05629D7A72DDFBC9FCB81ACF98A0B9B2D338B7A08B863AD64BA7B3AB
0022DE11D9D1AE6EDC2C832E6DA928A403E0D65AB1044F7528A7198FD3C41FBB
66EEE60061BAC07096DD04F4A00A267798FBC6391A5CC12E7699E7FD65425C54
52DFCB9E33A707F09BFAFD822369692E7D69A79C806CC724423A1BB5A4429EF1
B20C327BBCC1A23CEA04CD046E41B535DC5E8A04AE561EDFDA04102E8FE05C41
53DA5F3763B0991B8A5041B4BE291D4C7861CDCCFE3EACADD20F090A721766F3
03181290EBE5BDED1B845E2F09DB86157B5E6B0AFD1B42AB36DAFD78C06C4832
AFCAC656A8F2E9F8CB6C50FC051A0A025420BA758B83C4F079BC8D074C8BB417
3E0803C0DA19BEC9E3466B089F5A654B1D8F2D8A43B6343E8955415AC5BFB5EE
A932B7D82CFA1E873FAF0439C23244DC8E44E53D823BDB1BB2242E4F5F18BEEF
D566B6C0EA9ACA40DC7AEB95FB5B48A627B334BC1A640058AD41DB55B84E1015
E1992BA25B612194CD33C8B89FBEF11C6B8643C75ED812B0A80A0291F1380557
6B66A64A59FCD1AB0C7ADEC9F735B9EE836C685EF83F89552C2696C9BA0325A9
C4C0D1D0E36D0FAB7A55CA44ECB3627C4D61415A9B5F83D9B61DB5E5E1916E6B
557BB842C027EAB8B3198B00E53E6DC0D81DE1E49BBED4537C8B0AB7CC03AC9E
F258BFC09D01726F292019E3D8B9AAF53E3FC021498CA5236346B029695C85B5
7C014806628CC91D2ECB82515DC2A6DA038C5F8B850A18EC78564A14287E622D
F0B51E344D0C101A72C896D23CD47D09238BE3D20E8266A67F6833A03D7FD790
6F12E409F65E15D5DFE42D55E60D25DF8BB979C0E9E5B3CE1585F0FD23DBA051
D6CCC492959E567ECC64F5A40DD29F7EB59A148E156B6D95B60818B76BE27FC3
1403181F684B89E22CC35C7A710C07DA7EAAF06C18D3C5098F246277F23C9F91
580E1E6C8F44B42916AECB0434616632B1969B8DBB1C5EF6A25845FDA1241E11
4055D407407587FFA1A9E6E480B66A3832C155699EB0A3F98F8148E96BB216D2
E3E154A9D971254AF0A21BBE8AB5AD3B3B405DF5108FE1C095DBD1C87AA738BF
DA14C9825AE7D5F424CDB074C9D62628FBAABF5670AB21B8CB19B3AC1A5710EC
32D042B31DF36463A6287D7DD6E140A019AC7DBA3231BF7ADE5D754F316CBAA2
BD9243D79E6C8ACFC0052D330A039D9295362D4FDF91BE3D32A250F6421D89FB
DCE3856A77F156F5022CFB1AFE28EB7DB6158785B8FAF4C2AF2159D2E6C4D33C
1457F33AB7513EEF9515AD87F1DD79C8787920D10A27EFCD3445E5DA0928B294
00665D0837CCF9D31DF3C19A88307817A0009EEF236FEB963334A764706A8A5C
1D9196BF0E2DC85000F928A2CBD3B848AD1DE5A279A25C79AF6A8CEF1C193405
19580BD71249278ABF87D1A20BD12B498DCFA7DE9C6A1C438069DBF64EEBEF64
2ACFCCE7274E696ABFD59D32F6FDBC48AB34054406B69B70F34408D2E7998079
3DB37A81685414A914B9FA214458A90FDBB41EF46660289DF209068A0A5DFE4C
F96F5C29C98440BBD57D4EDC1F7DDB6783C74D5AC9D4F5C01C4602A8C0D385E5
1F4A05DF62ADD636357A5F1AEE898D9D70DC50125D1E44121A0EB87697F2FEBA
441925C0E4A8EC68989A0E5E1AACB6615D24FE0EF181264D7A918E12EA17F887
EC4A939D81134FAF6541925132FDF87FC199BB2A249878FABDC4C0C9A0EB55A2
E9A07530666B64CC5279AFA846AE6F0D2DD759ACA767889CD8C896EB548B4E9E
369AB161064003B2FAD8F09D670132022C2F84BA8FAA407931ADE90F96622E17
F0D6C6B717E781809C7A722E7227B37AA117590B6EEA4C3FE8083B747A5F3787
AC553D6DEBFF33A1A8B9D2EFAF6ADF7F475A6278E92C3983FB7402594E684B46
3FFEEB679E383697A802004B0A8EACCF0A73D0E01D136943CD25988A8B0F5CF2
B1BFA6F5419DB85B63D6C0C68FF63C9773B65D3E7AD632A33E025EF71802EE97
308FB15BF1E9BA7A6E18A473312077EB4AFCBB9293FC4AFC7093DD7916F2CDB0
4A57C0727DFE142E23692D37533B605F45D63BB9D26C095D1B6F1C3E75F33779
B716BED33D91C4007A15C7B46686530D3D6501466012F9F1A6069D7A1B8FA73B
451115814134E3695F6C993642EFD527DC0FF288A2CD1FAD96BC691B3164982D
BD78AE52F021D65C7EBFDF2B7CC0EFEE57F41BD363D92D0E618E85CB37551F64
C2FFFAB9EBEA39A8B257B0A754A9FDA9073A3C25596888A06E2E07F22BFD4856
A46D689030D86075F32E94C103065F1DBEAB4EBCC14E72658BA8DC55CBDCAD87
735159D01D928B1D6D203149A75EB37E30E07F703B8010441BDD2D1AB17E1FE3
CD638CCC60A5D023B01234777566687662631BAE981C0EADDEFAA226993D1E3D
018B7A5517422B21E1E7C883C5BC958E520130CBF2584E846DBE2CD8C603B5B1
5E739C348AABC45D66589EB21BFBB51379FEAF13D4FD6FB6152CAE3E10D40C30
5D38BBE1A55777DA904406218CF2501E395558CD335C344F54820DF2EBFD6A5D
632352D4225B1E173393FFEAC8C5B4FFE844C24A69AF7CBFAD85006167AC82B5
0633460E55192683BDA771209D3486E0C9FE27B735156E6B90E43A0883FBAC79
23F8990D5F728656DA6865C9E230300A200F69C862744A477A503EEEF02DAEBC
316AB8F6E41400C01DED92E922175AFCAB974D8BE680B229FF79153662383428
12A231E9EA0EA947165FF3D3A5368E2EF5771B2FDCA23F3CFD354BFDF4DD397F
DC183E9BAD54F6262028E4C66CCED6610174FF4031F65DA719590BD6DA8DEE00
59E08AE05F27852AA14D6323E92857448DDE19D2331FD3F0C12ADFED97BFE265
19326497A932B7499433A0428AAB1321BE98F540F4EE9DFD7B49B0BD32DE24EA
BDCBA76F1E5397A639F8A7D3580C05E8EA9CCF2CD0BF7AC1387A25180F0680C6
D32A99ED4B09146D70A47BDB638E1FE3F22F3E33F3C7D08B2E265CB9A8842C43
F98E1285F4CA2D4447B8594364441A8ED3EF51C1FA7921B75EFFCFF45DB19954
1285175FE37044C1B23024EACC46ACD8C3E4C3830F5E94C51AD4F0BA74E6A14F
D340886D073D4BA7E9EAB63EF0E2472559155719CFA9B1F839F6F33B3AE0379A
6A7EF8E41130AD9BB6C519B638F6D36E18182C2111F1DDBA45F63B1C176D28ED
D79D889C3B953DA72A14ED4F83541170D99CE83C3ACC3FEF2B6B5945C235B2C8
D8F5DA58050C57E80F222E693D7ACC25E7EA446AAF6B9547FA092B51E5222C8A
EB3DBDB694D85A8C7C66DF43C53D3052DC0DDC86C98186902CA94C432C784793
E03BE23265121BDDFF5569D7FAD23023B54DC4E3751B143FD574BA9A737D2B19
B7E460899770ACAE13B044C9BF3B0E5C073BA9758C8071236297F1CCBC26B574
D03F5C56EC22CAD3FF63EA8CD9D6946F758D00550E05812CBEECC856588652C4
2FD50C0952E31C7707DECAB30CD89ABC3D33E85FEA7971B3FDAE95A7BF37801D
05045A37E1C0C6E2EA2A85960C6FBA1A0F0FE395B077E11CFB184D4961A65BAB
FADDDD13A778EF6CDE64D2E121024C82F7FDDB298B1E9C26BC05A71347C45E3E
8C401AA280A85F9E2073F0513FCFDF7F99F56BC5FAF8B08462D34DC49DE2F1CE
8A707101684F3C9CE4629404F93E981A2C541A758DF18E80DF0DF0B5D625E92D
C9585CB40A6E466DCAA82C87F5FC18EC4BB8F66F0D806974F78FA15A748A44E6
64752D60B96700705D387FE4D407BACEEE43A2A16CB018A0E4E896BEE64C68CA
F8209D83F0DDB6A155D9DDDEA3A690BEBED28EA719B27117DFBD3668BE39B293
0DB15C3AE7BE1CC48EBD8F7495D03542DB37CD7E20CEF113604615ACD0A2BA77
7E591732329CDEE333D45EA86A818D3D66A13BC2F82D127381B579B32BAB542C
17610E996F5ABBD532522A9FC6B7FBE91840A6FAE4575124AD89F75B1A1CA2EA
C7F15D2CE24D39FBB8DDDFC37DEFC42D974277DE778DF7825274511957B2B2DF
E67FF2BC64A42DABC27C7ADCDD8CFF6E1F532798072B6CA231796E2B722C6F5A
E75E8EC1FDDFF8078E78BB23E6AB0331710D30E6DC8184941233D60A23A933C6
5631F5B15A1FF1E91AF7A0B901369CF73E4861A59D4BEB270D987A4C6CFFEBBE
9AA2F8403C9C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39139632 55387786 1000 600 600 (mtiiuf08.dvi)
@start /Fa 147[21 108[{}1 58.1154 /CMMI7 rf /Fb 205[33
50[{}1 58.1154 /CMR7 rf /Fc 129[42 4[41 47 9[50 73 39[61
1[59 5[42 34[43 26[{}9 83.022 /CMMI10 rf /Fd 134[44 44
60 44 46 32 33 33 44 46 42 46 69 23 44 1[23 46 42 25
37 46 37 46 42 9[85 1[62 60 1[61 65 57 2[76 52 2[30 62
65 54 57 63 60 1[62 1[39 1[65 2[23 42 3[42 42 42 42 42
42 1[23 28 23 65 1[32 32 20[42 6[46 12[{}58 83.022 /CMR10
rf /Fe 137[71 1[52 53 55 2[67 75 112 37 2[37 3[61 75
2[65 9[139 2[94 6[128 81 2[50 2[85 88 12[67 1[67 3[67
67 67 3[37 44[{}25 119.552 /CMBX12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1414 260 a Fe(Midterm)45
b(I)g(EEE)g(161)798 431 y(W)-11 b(a)l(v)l(es)46 b(and)f(T)-11
b(ransmission)45 b(Lines,)g(F)-11 b(all)46 b(2008)1417
684 y Fd(Instructor:)36 b(Dr.)h(Milica)27 b(Mark)n(o)n(vi)n(\023)-39
b(c)p -68 871 4134 12 v 0 TeXcolorgray 34 1113 a(1.)p
0 TeXcolorgray 41 w(Explain)27 b(Gauss)g(la)n(w.)36 b(Under)28
b(what)f(circumstances)g(it)h(is)f(usefull?)p 0 TeXcolorgray
1979 5741 a(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 34 260 a Fd(2.)p 0 TeXcolorgray
41 w(Plot)33 b(the)h(electric)f(\014eld)h(giv)n(en)f(b)n(y)1311
239 y Fc(~)1299 260 y(E)38 b Fd(=)32 b(\()p Fc(x)1574
230 y Fb(2)1635 260 y Fd(+)22 b Fc(y)1766 230 y Fb(2)1803
260 y Fd(\))o Fc(~)-41 b(x)23 b Fd(+)f(\()p Fc(x)2071
230 y Fb(2)2132 260 y Fd(+)g Fc(y)2263 230 y Fb(2)2300
260 y Fd(\))o Fc(~)-41 b(y)36 b Fd(in)e(x-y)f(plane)h(for)f(ab)r(out)g
(9)h(p)r(oin)n(ts)f(total)h(in)f(all)h(4)140 360 y(quadran)n(ts.)47
b(Then)31 b(\014nd)h(the)g(c)n(harge)e(distribution)h(that)h(pro)r
(duced)f(suc)n(h)g(\014eld.)49 b(Find)32 b(the)f(p)r(oten)n(tial)h(of)f
(p)r(oin)n(t)h(\(1,1\))f(if)140 459 y(the)d(reference)f(p)r(oin)n(t)g
(is)h(at)f(\(0,0\).)p 0 TeXcolorgray 1979 5741 a(2)p
0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 34 260 a Fd(3.)p 0 TeXcolorgray
41 w(Find)27 b(the)f(electric)g(\014eld)g(at)g(the)h(p)r(oin)n(t)f
(x=1m,)f(y=1.5m)g(due)i(to)f(a)f(stic)n(k)h(of)g(c)n(harge)e(placed)i
(b)r(et)n(w)n(een)g(y=1m)f(and)h(y=2m.)140 360 y(The)h(stic)n(k)g(of)g
(c)n(harge)e(is)i(c)n(harged)e(with)j(a)e(uniform)h(c)n(harge)f
(distribution)h(of)g Fc(\032)2665 372 y Fa(l)2713 360
y Fd(=)c(1)p Fc(nC)t(=m)p Fd(.)35 b(Deriv)n(e)27 b(all)g(equations)f
(using)140 459 y(Coulom)n(bs)h(La)n(w.)p 0 TeXcolorgray
1979 5741 a(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 34 260 a Fd(4.)p 0 TeXcolorgray
41 w(A)33 b(hollo)n(w,)g(in\014nite,)i(metallic)e(cylinder)g(of)f
(inner)h(radius)f(a=1mm)g(and)g(outer)h(radius)f(b=1.1mm)g(is)g(giv)n
(en,)i(Figure)e(1.)140 360 y(What)d(is)g(the)g(electric)f(\014eld)h
(inside,)g(and)f(outside)h(of)f(this)h(structure)f(if)i(the)f(cylinder)
f(is)g(c)n(harged)f(with)i(total)g(c)n(harge)e(Q.)140
459 y(What)h(is)g(the)g(p)r(oten)n(tial)f(of)h(this)g(structure)f(with)
i(resp)r(ect)e(to)h(a)f(reference)g(p)r(oin)n(t)h(at)f(in\014nit)n(y)-7
b(.)38 b(What)28 b(is)g(the)g(capacitance)140 559 y(of)f(this)g
(structure)f(\(Hin)n(t:)38 b(Use)26 b(the)i(p)r(oten)n(tial)e(found)i
(in)f(the)g(previous)f(step\)?)37 b(If)27 b(a)g(grounded)e(metal)i
(shell)g(of)g(thic)n(kness)140 659 y(1mm)j(is)g(placed)f(at)h(r=10mm)e
(\(as)i(in)g(Figure)f(2\))h(concen)n(trically)e(with)i(this)g
(structure,)g(what)g(will)g(b)r(e)g(the)h(capacitance)140
758 y(no)n(w?)48 b(Did)31 b(the)h(capacitance)e(increase)g(or)h
(decrease?)46 b(Plot)31 b(the)h(magnitude)f(of)g(\014eld)h(and)f(p)r
(oten)n(tial)g(as)g(a)g(function)g(of)140 858 y(radius)c(in)h(b)r(oth)g
(cases.)p 0 TeXcolorgray 1979 5741 a(4)p 0 TeXcolorgray
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 34 260 a Fd(5.)p 0 TeXcolorgray
41 w(A)25 b(c)n(harged)e(spherical)h(metallic)h(shell)g(is)g(placed)f
(1m)h(ab)r(o)n(v)n(e)e(a)i(grounded)f(metal)h(plane.)35
b(Find)26 b(the)f(electric)f(\014eld.)37 b(Radius)140
360 y(of)28 b(shell)f(is)h(1m,)f(distance)g(from)h(the)g(ground)e
(plane)i(is)f(1m,)h(c)n(harge)d(on)j(shell)f(is)h(1nC.)p
0 TeXcolorgray 1979 5741 a(5)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
